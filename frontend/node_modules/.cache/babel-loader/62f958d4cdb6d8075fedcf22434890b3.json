{"ast":null,"code":"var conversions = {\n  // length\n  'px': {\n    'px': 1,\n    'cm': 96.0 / 2.54,\n    'mm': 96.0 / 25.4,\n    'in': 96,\n    'pt': 96.0 / 72.0,\n    'pc': 16\n  },\n  'cm': {\n    'px': 2.54 / 96.0,\n    'cm': 1,\n    'mm': 0.1,\n    'in': 2.54,\n    'pt': 2.54 / 72.0,\n    'pc': 2.54 / 6.0\n  },\n  'mm': {\n    'px': 25.4 / 96.0,\n    'cm': 10,\n    'mm': 1,\n    'in': 25.4,\n    'pt': 25.4 / 72.0,\n    'pc': 25.4 / 6.0\n  },\n  'in': {\n    'px': 1.0 / 96.0,\n    'cm': 1.0 / 2.54,\n    'mm': 1.0 / 25.4,\n    'in': 1,\n    'pt': 1.0 / 72.0,\n    'pc': 1.0 / 6.0\n  },\n  'pt': {\n    'px': 0.75,\n    'cm': 72.0 / 2.54,\n    'mm': 72.0 / 25.4,\n    'in': 72,\n    'pt': 1,\n    'pc': 12\n  },\n  'pc': {\n    'px': 6.0 / 96.0,\n    'cm': 6.0 / 2.54,\n    'mm': 6.0 / 25.4,\n    'in': 6,\n    'pt': 6.0 / 72.0,\n    'pc': 1\n  },\n  // angle\n  'deg': {\n    'deg': 1,\n    'grad': 0.9,\n    'rad': 180 / Math.PI,\n    'turn': 360\n  },\n  'grad': {\n    'deg': 400 / 360,\n    'grad': 1,\n    'rad': 200 / Math.PI,\n    'turn': 400\n  },\n  'rad': {\n    'deg': Math.PI / 180,\n    'grad': Math.PI / 200,\n    'rad': 1,\n    'turn': Math.PI * 2\n  },\n  'turn': {\n    'deg': 1 / 360,\n    'grad': 1 / 400,\n    'rad': 0.5 / Math.PI,\n    'turn': 1\n  },\n  // time\n  's': {\n    's': 1,\n    'ms': 1 / 1000\n  },\n  'ms': {\n    's': 1000,\n    'ms': 1\n  },\n  // frequency\n  'Hz': {\n    'Hz': 1,\n    'kHz': 1000\n  },\n  'kHz': {\n    'Hz': 1 / 1000,\n    'kHz': 1\n  },\n  // resolution\n  'dpi': {\n    'dpi': 1,\n    'dpcm': 1.0 / 2.54,\n    'dppx': 1 / 96\n  },\n  'dpcm': {\n    'dpi': 2.54,\n    'dpcm': 1,\n    'dppx': 2.54 / 96.0\n  },\n  'dppx': {\n    'dpi': 96,\n    'dpcm': 96.0 / 2.54,\n    'dppx': 1\n  }\n};\n\nmodule.exports = function (value, sourceUnit, targetUnit, precision) {\n  if (!conversions.hasOwnProperty(targetUnit)) throw new Error(\"Cannot convert to \" + targetUnit);\n  if (!conversions[targetUnit].hasOwnProperty(sourceUnit)) throw new Error(\"Cannot convert from \" + sourceUnit + \" to \" + targetUnit);\n  var converted = conversions[targetUnit][sourceUnit] * value;\n\n  if (precision !== false) {\n    precision = Math.pow(10, parseInt(precision) || 5);\n    return Math.round(converted * precision) / precision;\n  }\n\n  return converted;\n};","map":{"version":3,"sources":["/Users/bermed28/Desktop/booking-system-stackoverflowers-studios/frontend/node_modules/css-unit-converter/index.js"],"names":["conversions","Math","PI","module","exports","value","sourceUnit","targetUnit","precision","hasOwnProperty","Error","converted","pow","parseInt","round"],"mappings":"AAAA,IAAIA,WAAW,GAAG;AACd;AACA,QAAM;AACF,UAAM,CADJ;AAEF,UAAM,OAAK,IAFT;AAGF,UAAM,OAAK,IAHT;AAIF,UAAM,EAJJ;AAKF,UAAM,OAAK,IALT;AAMF,UAAM;AANJ,GAFQ;AAUd,QAAM;AACF,UAAM,OAAK,IADT;AAEF,UAAM,CAFJ;AAGF,UAAM,GAHJ;AAIF,UAAM,IAJJ;AAKF,UAAM,OAAK,IALT;AAMF,UAAM,OAAK;AANT,GAVQ;AAkBd,QAAM;AACF,UAAM,OAAK,IADT;AAEF,UAAM,EAFJ;AAGF,UAAM,CAHJ;AAIF,UAAM,IAJJ;AAKF,UAAM,OAAK,IALT;AAMF,UAAM,OAAK;AANT,GAlBQ;AA0Bd,QAAM;AACF,UAAM,MAAI,IADR;AAEF,UAAM,MAAI,IAFR;AAGF,UAAM,MAAI,IAHR;AAIF,UAAM,CAJJ;AAKF,UAAM,MAAI,IALR;AAMF,UAAM,MAAI;AANR,GA1BQ;AAkCd,QAAM;AACF,UAAM,IADJ;AAEF,UAAM,OAAK,IAFT;AAGF,UAAM,OAAK,IAHT;AAIF,UAAM,EAJJ;AAKF,UAAM,CALJ;AAMF,UAAM;AANJ,GAlCQ;AA0Cd,QAAM;AACF,UAAM,MAAI,IADR;AAEF,UAAM,MAAI,IAFR;AAGF,UAAM,MAAI,IAHR;AAIF,UAAM,CAJJ;AAKF,UAAM,MAAI,IALR;AAMF,UAAM;AANJ,GA1CQ;AAkDd;AACA,SAAO;AACH,WAAO,CADJ;AAEH,YAAQ,GAFL;AAGH,WAAO,MAAIC,IAAI,CAACC,EAHb;AAIH,YAAQ;AAJL,GAnDO;AAyDd,UAAQ;AACJ,WAAO,MAAI,GADP;AAEJ,YAAQ,CAFJ;AAGJ,WAAO,MAAID,IAAI,CAACC,EAHZ;AAIJ,YAAQ;AAJJ,GAzDM;AA+Dd,SAAO;AACH,WAAOD,IAAI,CAACC,EAAL,GAAQ,GADZ;AAEH,YAAQD,IAAI,CAACC,EAAL,GAAQ,GAFb;AAGH,WAAO,CAHJ;AAIH,YAAQD,IAAI,CAACC,EAAL,GAAQ;AAJb,GA/DO;AAqEd,UAAQ;AACJ,WAAO,IAAE,GADL;AAEJ,YAAQ,IAAE,GAFN;AAGJ,WAAO,MAAID,IAAI,CAACC,EAHZ;AAIJ,YAAQ;AAJJ,GArEM;AA2Ed;AACA,OAAK;AACD,SAAK,CADJ;AAED,UAAM,IAAE;AAFP,GA5ES;AAgFd,QAAM;AACF,SAAK,IADH;AAEF,UAAM;AAFJ,GAhFQ;AAoFd;AACA,QAAM;AACF,UAAM,CADJ;AAEF,WAAO;AAFL,GArFQ;AAyFd,SAAO;AACH,UAAM,IAAE,IADL;AAEH,WAAO;AAFJ,GAzFO;AA6Fd;AACA,SAAO;AACH,WAAO,CADJ;AAEH,YAAQ,MAAI,IAFT;AAGH,YAAQ,IAAE;AAHP,GA9FO;AAmGd,UAAQ;AACJ,WAAO,IADH;AAEJ,YAAQ,CAFJ;AAGJ,YAAQ,OAAK;AAHT,GAnGM;AAwGd,UAAQ;AACJ,WAAO,EADH;AAEJ,YAAQ,OAAK,IAFT;AAGJ,YAAQ;AAHJ;AAxGM,CAAlB;;AA+GAC,MAAM,CAACC,OAAP,GAAiB,UAAUC,KAAV,EAAiBC,UAAjB,EAA6BC,UAA7B,EAAyCC,SAAzC,EAAoD;AACjE,MAAI,CAACR,WAAW,CAACS,cAAZ,CAA2BF,UAA3B,CAAL,EACI,MAAM,IAAIG,KAAJ,CAAU,uBAAuBH,UAAjC,CAAN;AAEJ,MAAI,CAACP,WAAW,CAACO,UAAD,CAAX,CAAwBE,cAAxB,CAAuCH,UAAvC,CAAL,EACI,MAAM,IAAII,KAAJ,CAAU,yBAAyBJ,UAAzB,GAAsC,MAAtC,GAA+CC,UAAzD,CAAN;AAEJ,MAAII,SAAS,GAAGX,WAAW,CAACO,UAAD,CAAX,CAAwBD,UAAxB,IAAsCD,KAAtD;;AAEA,MAAIG,SAAS,KAAK,KAAlB,EAAyB;AACrBA,IAAAA,SAAS,GAAGP,IAAI,CAACW,GAAL,CAAS,EAAT,EAAaC,QAAQ,CAACL,SAAD,CAAR,IAAuB,CAApC,CAAZ;AACA,WAAOP,IAAI,CAACa,KAAL,CAAWH,SAAS,GAAGH,SAAvB,IAAoCA,SAA3C;AACH;;AAED,SAAOG,SAAP;AACH,CAfD","sourcesContent":["var conversions = {\r\n    // length\r\n    'px': {\r\n        'px': 1,\r\n        'cm': 96.0/2.54,\r\n        'mm': 96.0/25.4,\r\n        'in': 96,\r\n        'pt': 96.0/72.0,\r\n        'pc': 16\r\n    },\r\n    'cm': {\r\n        'px': 2.54/96.0,\r\n        'cm': 1,\r\n        'mm': 0.1,\r\n        'in': 2.54,\r\n        'pt': 2.54/72.0,\r\n        'pc': 2.54/6.0\r\n    },\r\n    'mm': {\r\n        'px': 25.4/96.0,\r\n        'cm': 10,\r\n        'mm': 1,\r\n        'in': 25.4,\r\n        'pt': 25.4/72.0,\r\n        'pc': 25.4/6.0\r\n    },\r\n    'in': {\r\n        'px': 1.0/96.0,\r\n        'cm': 1.0/2.54,\r\n        'mm': 1.0/25.4,\r\n        'in': 1,\r\n        'pt': 1.0/72.0,\r\n        'pc': 1.0/6.0\r\n    },\r\n    'pt': {\r\n        'px': 0.75,\r\n        'cm': 72.0/2.54,\r\n        'mm': 72.0/25.4,\r\n        'in': 72,\r\n        'pt': 1,\r\n        'pc': 12\r\n    },\r\n    'pc': {\r\n        'px': 6.0/96.0,\r\n        'cm': 6.0/2.54,\r\n        'mm': 6.0/25.4,\r\n        'in': 6,\r\n        'pt': 6.0/72.0,\r\n        'pc': 1\r\n    },\r\n    // angle\r\n    'deg': {\r\n        'deg': 1,\r\n        'grad': 0.9,\r\n        'rad': 180/Math.PI,\r\n        'turn': 360\r\n    },\r\n    'grad': {\r\n        'deg': 400/360,\r\n        'grad': 1,\r\n        'rad': 200/Math.PI,\r\n        'turn': 400\r\n    },\r\n    'rad': {\r\n        'deg': Math.PI/180,\r\n        'grad': Math.PI/200,\r\n        'rad': 1,\r\n        'turn': Math.PI*2\r\n    },\r\n    'turn': {\r\n        'deg': 1/360,\r\n        'grad': 1/400,\r\n        'rad': 0.5/Math.PI,\r\n        'turn': 1\r\n    },\r\n    // time\r\n    's': {\r\n        's': 1,\r\n        'ms': 1/1000\r\n    },\r\n    'ms': {\r\n        's': 1000,\r\n        'ms': 1\r\n    },\r\n    // frequency\r\n    'Hz': {\r\n        'Hz': 1,\r\n        'kHz': 1000\r\n    },\r\n    'kHz': {\r\n        'Hz': 1/1000,\r\n        'kHz': 1\r\n    },\r\n    // resolution\r\n    'dpi': {\r\n        'dpi': 1,\r\n        'dpcm': 1.0/2.54,\r\n        'dppx': 1/96\r\n    },\r\n    'dpcm': {\r\n        'dpi': 2.54,\r\n        'dpcm': 1,\r\n        'dppx': 2.54/96.0\r\n    },\r\n    'dppx': {\r\n        'dpi': 96,\r\n        'dpcm': 96.0/2.54,\r\n        'dppx': 1\r\n    }\r\n};\r\n\r\nmodule.exports = function (value, sourceUnit, targetUnit, precision) {\r\n    if (!conversions.hasOwnProperty(targetUnit))\r\n        throw new Error(\"Cannot convert to \" + targetUnit);\r\n\r\n    if (!conversions[targetUnit].hasOwnProperty(sourceUnit))\r\n        throw new Error(\"Cannot convert from \" + sourceUnit + \" to \" + targetUnit);\r\n    \r\n    var converted = conversions[targetUnit][sourceUnit] * value;\r\n    \r\n    if (precision !== false) {\r\n        precision = Math.pow(10, parseInt(precision) || 5);\r\n        return Math.round(converted * precision) / precision;\r\n    }\r\n    \r\n    return converted;\r\n};\r\n"]},"metadata":{},"sourceType":"script"}