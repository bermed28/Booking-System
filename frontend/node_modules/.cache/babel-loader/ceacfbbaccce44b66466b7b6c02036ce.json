{"ast":null,"code":"(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) : typeof define === 'function' && define.amd ? define(['exports'], factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global['fast-equals'] = {}));\n})(this, function (exports) {\n  'use strict';\n\n  var HAS_WEAKSET_SUPPORT = typeof WeakSet === 'function';\n  var keys = Object.keys;\n  /**\r\n   * are the values passed strictly equal or both NaN\r\n   *\r\n   * @param a the value to compare against\r\n   * @param b the value to test\r\n   * @returns are the values equal by the SameValueZero principle\r\n   */\n\n  function sameValueZeroEqual(a, b) {\n    return a === b || a !== a && b !== b;\n  }\n  /**\r\n   * is the value a plain object\r\n   *\r\n   * @param value the value to test\r\n   * @returns is the value a plain object\r\n   */\n\n\n  function isPlainObject(value) {\n    return value.constructor === Object || value.constructor == null;\n  }\n  /**\r\n   * is the value promise-like (meaning it is thenable)\r\n   *\r\n   * @param value the value to test\r\n   * @returns is the value promise-like\r\n   */\n\n\n  function isPromiseLike(value) {\n    return !!value && typeof value.then === 'function';\n  }\n  /**\r\n   * is the value passed a react element\r\n   *\r\n   * @param value the value to test\r\n   * @returns is the value a react element\r\n   */\n\n\n  function isReactElement(value) {\n    return !!(value && value.$$typeof);\n  }\n  /**\r\n   * in cases where WeakSet is not supported, creates a new custom\r\n   * object that mimics the necessary API aspects for cache purposes\r\n   *\r\n   * @returns the new cache object\r\n   */\n\n\n  function getNewCacheFallback() {\n    var values = [];\n    return {\n      add: function add(value) {\n        values.push(value);\n      },\n      has: function has(value) {\n        return values.indexOf(value) !== -1;\n      }\n    };\n  }\n  /**\r\n   * get a new cache object to prevent circular references\r\n   *\r\n   * @returns the new cache object\r\n   */\n\n\n  var getNewCache = function (canUseWeakMap) {\n    if (canUseWeakMap) {\n      return function _getNewCache() {\n        return new WeakSet();\n      };\n    }\n\n    return getNewCacheFallback;\n  }(HAS_WEAKSET_SUPPORT);\n  /**\r\n   * create a custom isEqual handler specific to circular objects\r\n   *\r\n   * @param [isEqual] the isEqual comparator to use instead of isDeepEqual\r\n   * @returns the method to create the `isEqual` function\r\n   */\n\n\n  function createCircularEqualCreator(isEqual) {\n    return function createCircularEqual(comparator) {\n      var _comparator = isEqual || comparator;\n\n      return function circularEqual(a, b, cache) {\n        if (cache === void 0) {\n          cache = getNewCache();\n        }\n\n        var isCacheableA = !!a && typeof a === 'object';\n        var isCacheableB = !!b && typeof b === 'object';\n\n        if (isCacheableA || isCacheableB) {\n          var hasA = isCacheableA && cache.has(a);\n          var hasB = isCacheableB && cache.has(b);\n\n          if (hasA || hasB) {\n            return hasA && hasB;\n          }\n\n          if (isCacheableA) {\n            cache.add(a);\n          }\n\n          if (isCacheableB) {\n            cache.add(b);\n          }\n        }\n\n        return _comparator(a, b, cache);\n      };\n    };\n  }\n  /**\r\n   * are the arrays equal in value\r\n   *\r\n   * @param a the array to test\r\n   * @param b the array to test against\r\n   * @param isEqual the comparator to determine equality\r\n   * @param meta the meta object to pass through\r\n   * @returns are the arrays equal\r\n   */\n\n\n  function areArraysEqual(a, b, isEqual, meta) {\n    var index = a.length;\n\n    if (b.length !== index) {\n      return false;\n    }\n\n    while (index-- > 0) {\n      if (!isEqual(a[index], b[index], meta)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n  /**\r\n   * are the maps equal in value\r\n   *\r\n   * @param a the map to test\r\n   * @param b the map to test against\r\n   * @param isEqual the comparator to determine equality\r\n   * @param meta the meta map to pass through\r\n   * @returns are the maps equal\r\n   */\n\n\n  function areMapsEqual(a, b, isEqual, meta) {\n    var isValueEqual = a.size === b.size;\n\n    if (isValueEqual && a.size) {\n      a.forEach(function (aValue, aKey) {\n        if (isValueEqual) {\n          isValueEqual = false;\n          b.forEach(function (bValue, bKey) {\n            if (!isValueEqual && isEqual(aKey, bKey, meta)) {\n              isValueEqual = isEqual(aValue, bValue, meta);\n            }\n          });\n        }\n      });\n    }\n\n    return isValueEqual;\n  }\n\n  var OWNER = '_owner';\n  var hasOwnProperty = Function.prototype.bind.call(Function.prototype.call, Object.prototype.hasOwnProperty);\n  /**\r\n   * are the objects equal in value\r\n   *\r\n   * @param a the object to test\r\n   * @param b the object to test against\r\n   * @param isEqual the comparator to determine equality\r\n   * @param meta the meta object to pass through\r\n   * @returns are the objects equal\r\n   */\n\n  function areObjectsEqual(a, b, isEqual, meta) {\n    var keysA = keys(a);\n    var index = keysA.length;\n\n    if (keys(b).length !== index) {\n      return false;\n    }\n\n    if (index) {\n      var key = void 0;\n\n      while (index-- > 0) {\n        key = keysA[index];\n\n        if (key === OWNER) {\n          var reactElementA = isReactElement(a);\n          var reactElementB = isReactElement(b);\n\n          if ((reactElementA || reactElementB) && reactElementA !== reactElementB) {\n            return false;\n          }\n        }\n\n        if (!hasOwnProperty(b, key) || !isEqual(a[key], b[key], meta)) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  }\n  /**\r\n   * are the regExps equal in value\r\n   *\r\n   * @param a the regExp to test\r\n   * @param b the regExp to test agains\r\n   * @returns are the regExps equal\r\n   */\n\n\n  function areRegExpsEqual(a, b) {\n    return a.source === b.source && a.global === b.global && a.ignoreCase === b.ignoreCase && a.multiline === b.multiline && a.unicode === b.unicode && a.sticky === b.sticky && a.lastIndex === b.lastIndex;\n  }\n  /**\r\n   * are the sets equal in value\r\n   *\r\n   * @param a the set to test\r\n   * @param b the set to test against\r\n   * @param isEqual the comparator to determine equality\r\n   * @param meta the meta set to pass through\r\n   * @returns are the sets equal\r\n   */\n\n\n  function areSetsEqual(a, b, isEqual, meta) {\n    var isValueEqual = a.size === b.size;\n\n    if (isValueEqual && a.size) {\n      a.forEach(function (aValue) {\n        if (isValueEqual) {\n          isValueEqual = false;\n          b.forEach(function (bValue) {\n            if (!isValueEqual) {\n              isValueEqual = isEqual(aValue, bValue, meta);\n            }\n          });\n        }\n      });\n    }\n\n    return isValueEqual;\n  }\n\n  var HAS_MAP_SUPPORT = typeof Map === 'function';\n  var HAS_SET_SUPPORT = typeof Set === 'function';\n\n  function createComparator(createIsEqual) {\n    var isEqual =\n    /* eslint-disable no-use-before-define */\n    typeof createIsEqual === 'function' ? createIsEqual(comparator) : comparator;\n    /* eslint-enable */\n\n    /**\r\n     * compare the value of the two objects and return true if they are equivalent in values\r\n     *\r\n     * @param a the value to test against\r\n     * @param b the value to test\r\n     * @param [meta] an optional meta object that is passed through to all equality test calls\r\n     * @returns are a and b equivalent in value\r\n     */\n\n    function comparator(a, b, meta) {\n      if (a === b) {\n        return true;\n      }\n\n      if (a && b && typeof a === 'object' && typeof b === 'object') {\n        if (isPlainObject(a) && isPlainObject(b)) {\n          return areObjectsEqual(a, b, isEqual, meta);\n        }\n\n        var aShape = Array.isArray(a);\n        var bShape = Array.isArray(b);\n\n        if (aShape || bShape) {\n          return aShape === bShape && areArraysEqual(a, b, isEqual, meta);\n        }\n\n        aShape = a instanceof Date;\n        bShape = b instanceof Date;\n\n        if (aShape || bShape) {\n          return aShape === bShape && sameValueZeroEqual(a.getTime(), b.getTime());\n        }\n\n        aShape = a instanceof RegExp;\n        bShape = b instanceof RegExp;\n\n        if (aShape || bShape) {\n          return aShape === bShape && areRegExpsEqual(a, b);\n        }\n\n        if (isPromiseLike(a) || isPromiseLike(b)) {\n          return a === b;\n        }\n\n        if (HAS_MAP_SUPPORT) {\n          aShape = a instanceof Map;\n          bShape = b instanceof Map;\n\n          if (aShape || bShape) {\n            return aShape === bShape && areMapsEqual(a, b, isEqual, meta);\n          }\n        }\n\n        if (HAS_SET_SUPPORT) {\n          aShape = a instanceof Set;\n          bShape = b instanceof Set;\n\n          if (aShape || bShape) {\n            return aShape === bShape && areSetsEqual(a, b, isEqual, meta);\n          }\n        }\n\n        return areObjectsEqual(a, b, isEqual, meta);\n      }\n\n      return a !== a && b !== b;\n    }\n\n    return comparator;\n  }\n\n  var deepEqual = createComparator();\n  var shallowEqual = createComparator(function () {\n    return sameValueZeroEqual;\n  });\n  var circularDeepEqual = createComparator(createCircularEqualCreator());\n  var circularShallowEqual = createComparator(createCircularEqualCreator(sameValueZeroEqual));\n  exports.circularDeepEqual = circularDeepEqual;\n  exports.circularShallowEqual = circularShallowEqual;\n  exports.createCustomEqual = createComparator;\n  exports.deepEqual = deepEqual;\n  exports.sameValueZeroEqual = sameValueZeroEqual;\n  exports.shallowEqual = shallowEqual;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});","map":{"version":3,"sources":["../src/utils.ts","../src/comparator.ts","../src/index.ts"],"names":[],"mappings":"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","sourcesContent":["const HAS_WEAKSET_SUPPORT = typeof WeakSet === 'function';\n\nconst { keys } = Object;\n\ntype Cache = {\n  add: (value: any) => void;\n  has: (value: any) => boolean;\n};\n\nexport type EqualityComparator = (a: any, b: any, meta?: any) => boolean;\n\n/**\n * are the values passed strictly equal or both NaN\n *\n * @param a the value to compare against\n * @param b the value to test\n * @returns are the values equal by the SameValueZero principle\n */\nexport function sameValueZeroEqual(a: any, b: any) {\n  return a === b || (a !== a && b !== b);\n}\n\n/**\n * is the value a plain object\n *\n * @param value the value to test\n * @returns is the value a plain object\n */\nexport function isPlainObject(value: any) {\n  return value.constructor === Object || value.constructor == null;\n}\n\n/**\n * is the value promise-like (meaning it is thenable)\n *\n * @param value the value to test\n * @returns is the value promise-like\n */\nexport function isPromiseLike(value: any) {\n  return !!value && typeof value.then === 'function';\n}\n\n/**\n * is the value passed a react element\n *\n * @param value the value to test\n * @returns is the value a react element\n */\nexport function isReactElement(value: any) {\n  return !!(value && value.$$typeof);\n}\n\n/**\n * in cases where WeakSet is not supported, creates a new custom\n * object that mimics the necessary API aspects for cache purposes\n *\n * @returns the new cache object\n */\nexport function getNewCacheFallback(): Cache {\n  const values: any[] = [];\n\n  return {\n    add(value: any) {\n      values.push(value);\n    },\n\n    has(value: any) {\n      return values.indexOf(value) !== -1;\n    },\n  };\n}\n\n/**\n * get a new cache object to prevent circular references\n *\n * @returns the new cache object\n */\nexport const getNewCache = ((canUseWeakMap: boolean) => {\n  if (canUseWeakMap) {\n    return function _getNewCache(): Cache {\n      return new WeakSet();\n    };\n  }\n\n  return getNewCacheFallback;\n})(HAS_WEAKSET_SUPPORT);\n\n/**\n * create a custom isEqual handler specific to circular objects\n *\n * @param [isEqual] the isEqual comparator to use instead of isDeepEqual\n * @returns the method to create the `isEqual` function\n */\nexport function createCircularEqualCreator(isEqual?: EqualityComparator) {\n  return function createCircularEqual(comparator: EqualityComparator) {\n    const _comparator = isEqual || comparator;\n\n    return function circularEqual(\n      a: any,\n      b: any,\n      cache: Cache = getNewCache(),\n    ) {\n      const isCacheableA = !!a && typeof a === 'object';\n      const isCacheableB = !!b && typeof b === 'object';\n\n      if (isCacheableA || isCacheableB) {\n        const hasA = isCacheableA && cache.has(a);\n        const hasB = isCacheableB && cache.has(b);\n\n        if (hasA || hasB) {\n          return hasA && hasB;\n        }\n\n        if (isCacheableA) {\n          cache.add(a);\n        }\n\n        if (isCacheableB) {\n          cache.add(b);\n        }\n      }\n\n      return _comparator(a, b, cache);\n    };\n  };\n}\n\n/**\n * are the arrays equal in value\n *\n * @param a the array to test\n * @param b the array to test against\n * @param isEqual the comparator to determine equality\n * @param meta the meta object to pass through\n * @returns are the arrays equal\n */\nexport function areArraysEqual(\n  a: any[],\n  b: any[],\n  isEqual: EqualityComparator,\n  meta: any,\n) {\n  let index = a.length;\n\n  if (b.length !== index) {\n    return false;\n  }\n\n  while (index-- > 0) {\n    if (!isEqual(a[index], b[index], meta)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * are the maps equal in value\n *\n * @param a the map to test\n * @param b the map to test against\n * @param isEqual the comparator to determine equality\n * @param meta the meta map to pass through\n * @returns are the maps equal\n */\nexport function areMapsEqual(\n  a: Map<any, any>,\n  b: Map<any, any>,\n  isEqual: EqualityComparator,\n  meta: any,\n) {\n  let isValueEqual = a.size === b.size;\n\n  if (isValueEqual && a.size) {\n    a.forEach((aValue, aKey) => {\n      if (isValueEqual) {\n        isValueEqual = false;\n\n        b.forEach((bValue, bKey) => {\n          if (!isValueEqual && isEqual(aKey, bKey, meta)) {\n            isValueEqual = isEqual(aValue, bValue, meta);\n          }\n        });\n      }\n    });\n  }\n\n  return isValueEqual;\n}\n\ntype Dictionary<Type> = {\n  [key: string]: Type;\n  [index: number]: Type;\n};\n\nconst OWNER = '_owner';\n\nconst hasOwnProperty = Function.prototype.bind.call(\n  Function.prototype.call,\n  Object.prototype.hasOwnProperty,\n);\n\n/**\n * are the objects equal in value\n *\n * @param a the object to test\n * @param b the object to test against\n * @param isEqual the comparator to determine equality\n * @param meta the meta object to pass through\n * @returns are the objects equal\n */\nexport function areObjectsEqual(\n  a: Dictionary<any>,\n  b: Dictionary<any>,\n  isEqual: EqualityComparator,\n  meta: any,\n) {\n  const keysA = keys(a);\n\n  let index = keysA.length;\n\n  if (keys(b).length !== index) {\n    return false;\n  }\n\n  if (index) {\n    let key: string;\n\n    while (index-- > 0) {\n      key = keysA[index];\n\n      if (key === OWNER) {\n        const reactElementA = isReactElement(a);\n        const reactElementB = isReactElement(b);\n\n        if (\n          (reactElementA || reactElementB) &&\n          reactElementA !== reactElementB\n        ) {\n          return false;\n        }\n      }\n\n      if (!hasOwnProperty(b, key) || !isEqual(a[key], b[key], meta)) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\n/**\n * are the regExps equal in value\n *\n * @param a the regExp to test\n * @param b the regExp to test agains\n * @returns are the regExps equal\n */\nexport function areRegExpsEqual(a: RegExp, b: RegExp) {\n  return (\n    a.source === b.source &&\n    a.global === b.global &&\n    a.ignoreCase === b.ignoreCase &&\n    a.multiline === b.multiline &&\n    a.unicode === b.unicode &&\n    a.sticky === b.sticky &&\n    a.lastIndex === b.lastIndex\n  );\n}\n\n/**\n * are the sets equal in value\n *\n * @param a the set to test\n * @param b the set to test against\n * @param isEqual the comparator to determine equality\n * @param meta the meta set to pass through\n * @returns are the sets equal\n */\nexport function areSetsEqual(\n  a: Set<any>,\n  b: Set<any>,\n  isEqual: EqualityComparator,\n  meta: any,\n) {\n  let isValueEqual = a.size === b.size;\n\n  if (isValueEqual && a.size) {\n    a.forEach((aValue) => {\n      if (isValueEqual) {\n        isValueEqual = false;\n\n        b.forEach((bValue) => {\n          if (!isValueEqual) {\n            isValueEqual = isEqual(aValue, bValue, meta);\n          }\n        });\n      }\n    });\n  }\n\n  return isValueEqual;\n}\n","import {\n  EqualityComparator,\n  areArraysEqual,\n  areMapsEqual,\n  areObjectsEqual,\n  areRegExpsEqual,\n  areSetsEqual,\n  isPlainObject,\n  isPromiseLike,\n  sameValueZeroEqual,\n} from './utils';\n\nconst HAS_MAP_SUPPORT = typeof Map === 'function';\nconst HAS_SET_SUPPORT = typeof Set === 'function';\n\ntype EqualityComparatorCreator = (fn: EqualityComparator) => EqualityComparator;\n\nexport function createComparator(createIsEqual?: EqualityComparatorCreator) {\n  const isEqual: EqualityComparator =\n    /* eslint-disable no-use-before-define */\n    typeof createIsEqual === 'function'\n      ? createIsEqual(comparator)\n      : comparator;\n  /* eslint-enable */\n\n  /**\n   * compare the value of the two objects and return true if they are equivalent in values\n   *\n   * @param a the value to test against\n   * @param b the value to test\n   * @param [meta] an optional meta object that is passed through to all equality test calls\n   * @returns are a and b equivalent in value\n   */\n  function comparator(a: any, b: any, meta?: any) {\n    if (a === b) {\n      return true;\n    }\n\n    if (a && b && typeof a === 'object' && typeof b === 'object') {\n      if (isPlainObject(a) && isPlainObject(b)) {\n        return areObjectsEqual(a, b, isEqual, meta);\n      }\n\n      let aShape = Array.isArray(a);\n      let bShape = Array.isArray(b);\n\n      if (aShape || bShape) {\n        return aShape === bShape && areArraysEqual(a, b, isEqual, meta);\n      }\n\n      aShape = a instanceof Date;\n      bShape = b instanceof Date;\n\n      if (aShape || bShape) {\n        return (\n          aShape === bShape && sameValueZeroEqual(a.getTime(), b.getTime())\n        );\n      }\n\n      aShape = a instanceof RegExp;\n      bShape = b instanceof RegExp;\n\n      if (aShape || bShape) {\n        return aShape === bShape && areRegExpsEqual(a, b);\n      }\n\n      if (isPromiseLike(a) || isPromiseLike(b)) {\n        return a === b;\n      }\n\n      if (HAS_MAP_SUPPORT) {\n        aShape = a instanceof Map;\n        bShape = b instanceof Map;\n\n        if (aShape || bShape) {\n          return aShape === bShape && areMapsEqual(a, b, isEqual, meta);\n        }\n      }\n\n      if (HAS_SET_SUPPORT) {\n        aShape = a instanceof Set;\n        bShape = b instanceof Set;\n\n        if (aShape || bShape) {\n          return aShape === bShape && areSetsEqual(a, b, isEqual, meta);\n        }\n      }\n\n      return areObjectsEqual(a, b, isEqual, meta);\n    }\n\n    return a !== a && b !== b;\n  }\n\n  return comparator;\n}\n","import { createComparator } from './comparator';\nimport { createCircularEqualCreator, sameValueZeroEqual } from './utils';\n\nexport { createComparator as createCustomEqual, sameValueZeroEqual };\n\nexport const deepEqual = createComparator();\nexport const shallowEqual = createComparator(() => sameValueZeroEqual);\n\nexport const circularDeepEqual = createComparator(createCircularEqualCreator());\nexport const circularShallowEqual = createComparator(\n  createCircularEqualCreator(sameValueZeroEqual),\n);\n"]},"metadata":{},"sourceType":"script"}